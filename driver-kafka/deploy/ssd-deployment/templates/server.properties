#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#jinja2: trim_blocks:False

broker.id={{ brokerId }}

{% if inventory_hostname in groups["broker"] and inventory_hostname in groups["controller"] %}
process.roles=broker,controller
listeners=KAFKA://{{ privateIp }}:9092,CONTROLLER://:19092
controller.listener.names=CONTROLLER
inter.broker.listener.name=KAFKA
{% elif inventory_hostname in groups["broker"] and (kraft_enabled | default('False') | bool) %}
process.roles=broker
listeners=KAFKA://{{ privateIp }}:9092
controller.listener.names=CONTROLLER
advertised.listeners=KAFKA://{{ privateIp }}:9092
inter.broker.listener.name=KAFKA
{% elif inventory_hostname in groups["controller"] %}
process.roles=controller
listeners=CONTROLLER://:19092
controller.listener.names=CONTROLLER
{% endif %}

{% if kraft_enabled | default('False') | bool %}
{% set comma = joiner(",") %}
controller.quorum.voters={%- for host in groups['controller'] %}{{ comma() }}{{ groups['kafka'].index(host) }}@{{ hostvars[host].private_ip }}:19092{%- endfor %}


listener.security.protocol.map=CONTROLLER:{{ 'SSL' if tls_enabled | default(False) else 'PLAINTEXT' }},KAFKA:{{ 'SSL' if tls_enabled | default(False) else 'PLAINTEXT' }}

{% else %}

listeners={{ 'SASL_' if sasl_enabled | default(False) | bool }}{{ 'SSL' if tls_enabled | default(False) else 'PLAINTEXT' }}://{{ privateIp }}:9092
advertised.listeners={{ 'SASL_' if sasl_enabled | default(False) | bool }}{{ 'SSL' if tls_enabled | default(False) else 'PLAINTEXT' }}://{{ privateIp }}:9092

security.inter.broker.protocol={{ 'SASL_' if sasl_enabled | default(False) | bool }}{{ 'SSL' if tls_enabled | default(False) else 'PLAINTEXT' }}

{% endif %}

{% if sasl_enabled | default(False) | bool %}

sasl.enabled.mechanisms=SCRAM-SHA-256
authorizer.class.name=kafka.security.authorizer.AclAuthorizer
super.users=User:admin
sasl.mechanism.inter.broker.protocol=SCRAM-SHA-256
listener.name.sasl_{{ 'ssl' if tls_enabled | default(False) else 'plaintext' }}.scram-sha-256.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="admin-secret";

{% endif %}

{% if tls_enabled | default(False) %}

ssl.keystore.type=PEM
ssl.keystore.location=/etc/kafka/certs/keystore.pem
ssl.key.password=
ssl.truststore.type=PEM
ssl.truststore.location=/etc/kafka/certs/truststore.pem

{% endif %}

log.dirs={{ mounts | map(attribute='path') | list | join(',') }}

zookeeper.connect={{ zookeeperServers }}

num.replica.fetchers=16

message.max.bytes=10485760

replica.fetch.max.bytes=10485760

num.network.threads=16

num.io.threads=16
