#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


- name: Install NSQ Cluster
  hosts: nsq
  connection: ssh
  tasks:
  - set_fact:
      nsqHostUrl: "{{ hostvars[groups['nsq'][0]].private_ip }}"
  - name: Install RPM packages
    yum: pkg={{ item }} state=latest
    with_items:
      - wget
      - java

  - file: path=/opt/nsq state=absent
  - file: path=/opt/nsq state=directory
  - name: Install Nsq Server
    unarchive:
      src: "https://s3.amazonaws.com/bitly-downloads/nsq/nsq-1.1.0.linux-amd64.go1.10.3.tar.gz"
      remote_src: yes
#      src: "nsq-1.1.0.linux-amd64.go1.10.3.tar.gz"
      dest: /opt/nsq
      extra_opts: ["--strip-components=1"]
  - template:
      src: "templates/nsqd-server.service"
      dest: "/etc/systemd/system/nsqd-server.service"
  - template:
      src: "templates/nsqlookupd-server.service"
      dest: "/etc/systemd/system/nsqlookupd-server.service"
  - replace:
      dest: /etc/systemd/system/nsqd-server.service
      regexp: 'localhost'
      replace: '{{nsqHostUrl}}'
  - replace:
      dest: /etc/systemd/system/nsqlookupd-server.service
      regexp: 'localhost'
      replace: '{{nsqHostUrl}}'
  - systemd:
      state: started
      daemon_reload: yes
      name: "nsqlookupd-server"
  - systemd:
      state: started
      daemon_reload: yes
      name: "nsqd-server"


- name: Rabbitmq benchmarking client setup
  hosts: client
  connection: ssh
  become: true
  tasks:
    - set_fact:
        nsqHostUrl: "{{ hostvars[groups['nsq'][0]].private_ip }}"
    - name: Install RPM packages
      yum: pkg={{ item }} state=latest
      with_items:
        - java
    - name: Copy benchmark code
      unarchive:
        src: ../../package/target/openmessaging-benchmark-0.0.1-SNAPSHOT-bin.tar.gz
        dest: /opt
    - shell: rm -rf /opt/benchmark/
    - shell: mv /opt/openmessaging-benchmark-0.0.1-SNAPSHOT /opt/benchmark
    - shell: tuned-adm profile latency-performance
    - template:
        src: "templates/workers.yaml"
        dest: "/opt/benchmark/workers.yaml"
    - name: Get list of driver config files
      raw: ls -1 /opt/benchmark/driver-rabbitmq/*.yaml
      register: drivers_list
    - name: Configure nsqdHost URL
      lineinfile:
        dest: /opt/benchmark/driver-nsq/nsq.yaml
        regexp: '^nsqdHost\: '
        line: 'nsqdHost: {{nsqHostUrl}}'
    - name: Configure lookupHost URL
      lineinfile:
        dest: /opt/benchmark/driver-nsq/nsq.yaml
        regexp: '^lookupHost\: '
        line: 'lookupHost: {{nsqHostUrl}}'
    - name: Configure memory
      lineinfile:
        dest: /opt/benchmark/bin/benchmark-worker
        regexp: '^JVM_MEM='
        line: 'JVM_MEM="-Xms12G -Xmx12G -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+AggressiveOpts -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=32 -XX:ConcGCThreads=32 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+PerfDisableSharedMem -XX:+AlwaysPreTouch -XX:-UseBiasedLocking"'
    - name: Configure memory
      lineinfile:
        dest: /opt/benchmark/bin/benchmark
        regexp: '^JVM_MEM='
        line: 'JVM_MEM="-Xmx4G"'
    - name: Install benchmark systemd service
      template:
        src: "templates/benchmark-worker.service"
        dest: "/etc/systemd/system/benchmark-worker.service"
    - systemd:
        state: restarted
        daemon_reload: yes
        name: "benchmark-worker"


- name: List host addresses
  hosts: localhost
  become: false
  tasks:
    - debug:
        msg: "nsq brokers {{ item }}"
      with_items: "{{ groups['nsq'] }}"
    - debug:
        msg: "Benchmark client {{ item }}"
      with_items: "{{ groups['client'] }}"
  