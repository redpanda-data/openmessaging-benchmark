#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


- name: Install NATS-Streaming Cluster
  hosts: nats-streaming-server
  connection: ssh
  tasks:
  - set_fact:
      natsHostUrl: "{{ hostvars[groups['nats-streaming-server'][0]].private_ip }}"
      private_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  - name: Install RPM packages
    yum: pkg={{ item }} state=latest
    with_items:
      - wget
      - unzip

  - file: path=/opt/nats-streaming state=absent
  - file: path=/opt/nats-streaming state=directory
  - name: Install Nats-streaming Server
    unarchive:
      src: "https://github.com/nats-io/nats-streaming-server/releases/download/v0.11.2/nats-streaming-server-v0.11.2-linux-amd64.zip"
      remote_src: yes
      dest: /opt/nats-streaming
  - template:
      src: "templates/cluster.conf"
      dest: "/opt/nats-streaming/cluster.conf"
  - template:
      src: "templates/nats-streaming-server.service"
      dest: "/etc/systemd/system/nats-streaming-server.service"

  - replace:
      dest: /opt/nats-streaming/cluster.conf
      regexp: 'natsHostUrl'
      replace: '{{natsHostUrl}}'
  - replace:
      dest: /opt/nats-streaming/cluster.conf
      regexp: 'localhost'
      replace: '{{private_ip}}'
  - replace:
      dest: /opt/nats-streaming/cluster.conf
      regexp: 'false'
      replace: 'true'
    when:   groups['nats-streaming-server'][0] == inventory_hostname
  - replace:
      dest: /opt/nats-streaming/cluster.conf
      regexp: 'routes'
      replace: '#routes'
    when: groups['nats-streaming-server'][0] == inventory_hostname

  - systemd:
      state: started
      daemon_reload: yes
      name: "nats-streaming-server"


- name:  benchmarking client setup
  hosts: client
  connection: ssh
  become: true
  tasks:
    - set_fact:
        natsHostUrl: "{{ hostvars[groups['nats-streaming-server'][0]].private_ip }}"
    - name: Install RPM packages
      yum: pkg={{ item }} state=latest
      with_items:
        - java
    - file: path=/opt/benchmark state=absent
    - file: path=/opt/benchmark state=directory
    - name: Copy benchmark code
      unarchive:
        src: ../../package/target/openmessaging-benchmark-0.0.1-SNAPSHOT-bin.tar.gz
        dest: /opt
    - shell: mv /opt/openmessaging-benchmark-0.0.1-SNAPSHOT/* /opt/benchmark
    - shell: tuned-adm profile latency-performance
    - template:
        src: "templates/workers.yaml"
        dest: "/opt/benchmark/workers.yaml"
    - name: Get list of driver config files
      raw: ls -1 /opt/benchmark/driver-nats-streaming/*.yaml
      register: drivers_list

    - name: Configure natsHost URL
      lineinfile:
        dest: /opt/benchmark/driver-nats-streaming/nats-streaming.yaml
        regexp: '^natsHostUrl\: '
        line: 'natsHostUrl: nats://{{natsHostUrl}}:4222'
    - name: Configure memory
      lineinfile:
        dest: /opt/benchmark/bin/benchmark-worker
        regexp: '^JVM_MEM='
        line: 'JVM_MEM="-Xms12G -Xmx12G -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+AggressiveOpts -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=32 -XX:ConcGCThreads=32 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+PerfDisableSharedMem -XX:+AlwaysPreTouch -XX:-UseBiasedLocking"'
    - name: Configure memory
      lineinfile:
        dest: /opt/benchmark/bin/benchmark
        regexp: '^JVM_MEM='
        line: 'JVM_MEM="-Xmx4G"'
    - name: Install benchmark systemd service
      template:
        src: "templates/benchmark-worker.service"
        dest: "/etc/systemd/system/benchmark-worker.service"
    - systemd:
        state: restarted
        daemon_reload: yes
        name: "benchmark-worker"


- name: List host addresses
  hosts: localhost
  become: false
  tasks:
    - debug:
        msg: "nats-streaming brokers {{ item }}"
      with_items: "{{ groups['nats-streaming-server'] }}"
    - debug:
        msg: "Benchmark client {{ item }}"
      with_items: "{{ groups['client'] }}"
  